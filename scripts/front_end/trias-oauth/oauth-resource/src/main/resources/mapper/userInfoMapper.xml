<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trias.resouce.mapper.UserInfoMapper">
	<resultMap type="com.trias.resouce.model.Resource"
		id="userResource">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="root_name" property="rootName"
			jdbcType="VARCHAR" />
		<result column="path" property="path" jdbcType="VARCHAR" />
		<result column="description" property="description"
			jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.trias.resouce.model.vo.UserDetailVo"
		id="userDetail">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="username" property="username"/>
		<result column="address" property="address"/>
		<result column="sex" property="sex"/>
		<result column="email" property="email"/>
		<result column="role_type" property="roleType"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="private_key" property="privateKey"/>
		
	</resultMap>

	<select id="getResourceByUserRole" resultMap="userResource"
		parameterType="java.util.List">
		select
		c.id,
		c.root_name,
		c.path,
		c.description
		from trias_role a inner
		join trias_role_resource b on a.id = b.role_id
		inner join
		trias_resource c on b.resource_id = c.id
		where c.del_flag = 0 and
		a.role_type in
		<foreach collection="roleList" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="getUserByName" resultType="com.trias.resouce.model.User">
		SELECT
			u.id,
			u.username,
			u.address,
			u.private_key as `privateKey`,
			u.sex,
			u.email,
			u.create_time as `createTime`,
			u.update_time as `updateTime`
		FROM trias_cli_user u
		<where>
			<if test="username !='' and username != null">
				and u.username = #{username}
			</if>
		</where>
	</select>
	
	<update id="updateUserByName" parameterType="com.trias.resouce.model.User">
		update trias_cli_user
		<set>
			<if test="user.address != null and user.address != ''">
				address = #{user.address},
			</if>
			<if test="user.sex != null and user.sex != ''">
				sex = #{user.sex},
			</if>
			<if test="user.email != null and user.email != ''">
				email = #{user.email},
			</if>
			<if test="user.privateKey != null and user.privateKey != ''">
				private_key = #{user.privateKey},
			</if>
			update_time = now(),
		</set>
		where username = #{user.username}
	</update>
	
	<insert id="insertUser">
		INSERT INTO trias_cli_user(`username`,`address`,`sex`,`email`,`create_time`,`update_time`) VALUES 
		(#{user.username},#{user.address},#{user.sex},#{user.email}, now(), now())
	</insert>
	
	<select id="getUserRoleByName" resultType="java.lang.String">
		select a.role_type
		from trias_role a inner join trias_user_role b on a.id = b.role_id 
		inner join trias_cli_user c on c.id = b.user_id
		where c.username = #{username} 
	</select>
	
	<select id="getUserList" resultMap="userDetail" parameterType="com.trias.resouce.body.request.QueryUserRequest">
		SELECT
			a.id,
			a.username,
			a.address,
			a.sex,
			a.email,
			a.create_time,
			a.update_time,
			c.role_type
		FROM
			trias_cli_user a
		LEFT JOIN (trias_user_role b INNER JOIN trias_role c ON c.id = b.role_id)
		 ON a.id = b.user_id
		<where>
			and a.username != 'admin'
			<if test="address != null and address != ''">
				and a.address like CONCAT('%',#{address},'%')
			</if>
			<if test="sex != null and sex != ''">
				and a.sex = #{sex}
			</if>
			<if test="email != null and email != ''">
				and a.email like CONCAT('%',#{email},'%')
			</if>
			<if test="username != null and username != ''">
				and a.username like CONCAT('%',#{username},'%')
			</if>
		</where>
		ORDER BY
			a.update_time DESC
		limit #{currentIndex},#{pageSize}
	</select>
	
	<select id="getUserCount" resultType="java.lang.Integer" parameterType="com.trias.resouce.body.request.QueryUserRequest">
		SELECT
			count(a.id)
		FROM
			trias_cli_user a
		<where>
			and a.username != 'admin'
			<if test="address != null and address != ''">
				and a.address like CONCAT('%',#{address},'%')
			</if>
			<if test="sex != null and sex != ''">
				and a.sex = #{sex}
			</if>
			<if test="email != null and email != ''">
				and a.email like CONCAT('%',#{email},'%')
			</if>
			<if test="username != null and username != ''">
				and a.username like CONCAT('%',#{username},'%')
			</if>
		</where>
	</select>
</mapper>
